name: nuevo-workflow
on: [push]

jobs:
  nuevo-test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      repository-projects: write
    env:
      SAMPLE_ENV: "----------- >   VALOR EN EL ENV  < -----------"
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: list files
        run: ls -la
#      - name: do scout
#        #uses: coinfabrik/scout-actions@v2.2
#        uses: tenuki/my-test-scout-actions@testing12
#        id: scout_test_id
#        with:
#          target: 'avoid-autokey-upgradable/avoid-autokey-upgradable-1/vulnerable-example/'
#          markdown_output: "true"

#      - name: check output1
#        id: scout_test_id
#        run: echo "mdreport=$(cat sample.md)" >> $GITHUB_OUTPUT

#      -------------------------------
#      - name: check output1
#        id: scout_test_id
#        run: |
#          {
#            echo 'mdreport=<<EOF'
#            cat sample.md
#            echo
#            echo EOF
#          } >> $GITHUB_OUTPUT
#      -------------------------------

      - name: check output1
        id: scout_test_id
        run: |
          echo "mdreport=#hola\\n##hasta luego\\n#chau\n" >> $GITHUB_OUTPUT
          echo "otra=otrovalor" >> $GITHUB_OUTPUT

        # #>> "$GITHUB_OUTPUT"
#      - uses: markpatterson27/markdown-to-output@v1
#        id: mto
#        with:
#          filepath: examples/project.md
#      - run: |
#          echo ${{ steps.mto.outputs.attributes }}
#          echo ${{ steps.mto.outputs.body }}

      - name: check output1
        run: echo ${{ steps.scout_test_id.outputs.mdreport }}

      - name: check output12
        run: echo ${{ steps.scout_test_id.outputs.otra }}

      - name: check output2
        run: echo ${{ steps.scout_test_id.outputs.mdreport }} >> $GITHUB_STEP_SUMMARY

      - uses: mshick/add-pr-comment@v2.8.2
        with:
          message: |
            🌏🌏🌏🌏 **Hello** 🌏🌏🌏🌏
            ${{ steps.scout_test_id.outputs.mdreport }}
            🌏🌏🌏🌏 **Hello** 🌏🌏🌏🌏
            !

      - name: create string
        run: |
          MY_STRING=$(cat << EOF
          first line
          second line
          third line
          EOF
          )
          MY_STRING="${MY_STRING//'%'/'%25'}"
          MY_STRING="${MY_STRING//$'\n'/'%0A'}"
          MY_STRING="${MY_STRING//$'\r'/'%0D'}"
          echo "{content}=${MY_STRING}" >> $GITHUB_OUTPUT
        id: my_string
      - name: display string
        run: |
          echo "The string is: ${{ steps.my_string.outputs.content }}"